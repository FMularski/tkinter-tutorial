from tkinter import *
import sqlite3


root = Tk()

# create connection
conn = sqlite3.connect('address_book.db')

# create cursor
cur = conn.cursor()

# create table ( drop if exists)
cur.execute('DROP TABLE IF EXISTS addresses')
cur.execute(
    """
    CREATE TABLE addresses(
    first_name text,
    last_name text,
    address text,
    city text,
    state text,
    zipcode integer
    )
    """
)


def submit():   # submit func to add new record
    func_conn = sqlite3.connect('address_book.db')
    func_cur = func_conn.cursor()
    func_cur.execute('INSERT INTO addresses VALUES (:f_name, :l_name, :address, :city, :state, :zipcode)',
                    {
                        'f_name': f_name_entry.get(),
                        'l_name': l_name_entry.get(),
                        'address': address_entry.get(),
                        'city': city_entry.get(),
                        'state': state_entry.get(),
                        'zipcode': zipcode_entry.get()
                    })

    func_conn.commit()
    func_conn.close()

    f_name_entry.delete(0, END)
    l_name_entry.delete(0, END)
    address_entry.delete(0, END)
    city_entry.delete(0, END)
    state_entry.delete(0, END)
    zipcode_entry.delete(0, END)


def query():
    func_conn = sqlite3.connect('address_book.db')
    func_cur = func_conn.cursor()

    func_cur.execute('SELECT *, oid FROM addresses')    # oid is record's id automatically generated by sqlite3
    records = func_cur.fetchall()

    print_records = ''
    for record in records:
        print_records += str(record[-1]) + ') ' + str(record[0]) + ' ' + str(record[1]) + '\n' + \
                         str(record[2]) + ' ' + str(record[3]) + ' ' + str(record[4]) + ' ' + \
                         str(record[5]) + '*' * 20 + '\n'

    query_label = Label(root, text=print_records)
    query_label.grid(row=8, column=0, columnspan=2)


# gui
widget_width = 30

# labels

f_name_label = Label(root, text='First Name:')
f_name_label.grid(row=0, column=0)

l_name_label = Label(root, text='Last Name:')
l_name_label.grid(row=1, column=0)

address_label = Label(root, text='Address:')
address_label.grid(row=2, column=0)

city_label = Label(root, text='City:')
city_label.grid(row=3, column=0)

state_label = Label(root, text='State:')
state_label.grid(row=4, column=0)

zipcode_label = Label(root, text='Zipcode:')
zipcode_label.grid(row=5, column=0)


# entries
f_name_entry = Entry(root, width=widget_width)
f_name_entry.grid(row=0, column=1, padx=20)

l_name_entry = Entry(root, width=widget_width)
l_name_entry.grid(row=1, column=1)

address_entry = Entry(root, width=widget_width)
address_entry.grid(row=2, column=1)

city_entry = Entry(root, width=widget_width)
city_entry.grid(row=3, column=1)

state_entry = Entry(root, width=widget_width)
state_entry.grid(row=4, column=1)

zipcode_entry = Entry(root, width=widget_width)
zipcode_entry.grid(row=5, column=1)

# submit button
submit_btn = Button(root, text='Submit', command=submit)
submit_btn.grid(row=6, column=0, columnspan=2, pady=10, padx=10, ipadx=100)

# query button
query_btn = Button(root, text='Display records', command=query)
query_btn.grid(row=7, column=0, columnspan=2, pady=10, padx=10, ipadx=80)

# commit changes
conn.commit()

# close connection
conn.close()

root.mainloop()
